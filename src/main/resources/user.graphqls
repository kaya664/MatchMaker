type Query {
    users: [User]
}

type User {
    userName: String!
    name: String!
    email: String!
    password: String!
    country: String!
}

input AuthenticationRequest {
    userName: String!
    password: String!
}

type AuthenticationRepsonse {
    token: String
}

input RegistrationRequest {
    userName: String!
    name: String!
    email: String!
    password: String!
    country: String!
}

type RegistrationResponse {
    result: String
}

type Mutation {
    authenticate(authenticationRequest: AuthenticationRequest!) : AuthenticationRepsonse!
    register(registrationRequest: RegistrationRequest) : RegistrationResponse
}